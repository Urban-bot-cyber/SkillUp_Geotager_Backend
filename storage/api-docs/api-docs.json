{
    "openapi": "3.0.0",
    "info": {
        "title": "LARAVEL Rest API DOCUMENTATION for Geotager",
        "description": "L5 Swagger OpenApi description",
        "contact": {
            "email": "prosenjak.urban@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/locations/{id}/guess": {
            "post": {
                "tags": [
                    "Guesses"
                ],
                "summary": "Submit a guess for a location",
                "description": "Allows a user to guess the location's coordinates and calculates the error distance.",
                "operationId": "guessLocation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the location to guess",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "latitude",
                                    "longitude"
                                ],
                                "properties": {
                                    "latitude": {
                                        "description": "Latitude of the guess",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "longitude": {
                                        "description": "Longitude of the guess",
                                        "type": "number",
                                        "format": "float"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Guess submitted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Guess"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "403": {
                        "description": "User has already guessed this location"
                    },
                    "404": {
                        "description": "Location not found"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/locations": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get all locations",
                "description": "Fetch all locations with pagination",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of items per page for pagination.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 40
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Locations fetched successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Locations"
                ],
                "summary": "Create location",
                "description": "Create a new location with image upload",
                "operationId": "store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "latitude",
                                    "longitude",
                                    "user_id"
                                ],
                                "properties": {
                                    "image": {
                                        "description": "Location image",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "latitude": {
                                        "description": "Location latitude",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "longitude": {
                                        "description": "Location longitude",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "user_id": {
                                        "description": "User ID associated with location",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location created successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/locations/{id}": {
            "put": {
                "tags": [
                    "Locations"
                ],
                "summary": "Update location",
                "description": "Update an existing location with optional image upload",
                "operationId": "updateLocation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Location ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "image": {
                                        "description": "Location image",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "latitude": {
                                        "description": "Location latitude",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "longitude": {
                                        "description": "Location longitude",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "user_id": {
                                        "description": "User ID associated with location",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location updated successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Locations"
                ],
                "summary": "Delete location",
                "description": "Delete an existing location and its associated image",
                "operationId": "destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Location ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location deleted successfully"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/location/random": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get a random location",
                "description": "Fetch a single random location",
                "operationId": "random",
                "responses": {
                    "200": {
                        "description": "Random location fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No locations available"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login",
                "description": "User login with email and password",
                "operationId": "login",
                "requestBody": {
                    "description": "Login credentials",
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User Email",
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "description": "User password",
                                        "type": "string",
                                        "example": "YourPassword123!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "access_token": "token",
                                                "token_type": "Bearer",
                                                "expires_at": "timestamp"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged in successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or login failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/profile": {
            "get": {
                "tags": [
                    "Profile"
                ],
                "summary": "Get user profile",
                "description": "Fetch the authenticated user's profile information.",
                "operationId": "getProfile",
                "responses": {
                    "200": {
                        "description": "Profile data retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User profile data!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Logs out the authenticated user.",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "User logged out successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User logged out successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ]
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register",
                "description": "Register a new user with an optional profile picture",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "first_name": {
                                        "description": "Your first name",
                                        "type": "string",
                                        "example": "Jon"
                                    },
                                    "last_name": {
                                        "description": "Your last name",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "example": "john.doe@gmail.com"
                                    },
                                    "password": {
                                        "description": "User password",
                                        "type": "string",
                                        "example": "Test123!"
                                    },
                                    "password_confirmation": {
                                        "description": "Confirm password",
                                        "type": "string",
                                        "example": "Test123!"
                                    },
                                    "profile_picture": {
                                        "description": "Profile picture of the user",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/api/update": {
            "put": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Update user profile",
                "description": "Update user details and optionally the profile picture",
                "operationId": "updateUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [],
                                "properties": {
                                    "first_name": {
                                        "description": "Your first name",
                                        "type": "string",
                                        "example": "Jon"
                                    },
                                    "last_name": {
                                        "description": "Your last name",
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "description": "User email",
                                        "type": "string",
                                        "example": "john.doe@gmail.com"
                                    },
                                    "password": {
                                        "description": "User password",
                                        "type": "string",
                                        "example": "Test123!"
                                    },
                                    "password_confirmation": {
                                        "description": "Confirm password",
                                        "type": "string",
                                        "example": "Test123!"
                                    },
                                    "profile_picture": {
                                        "description": "Profile picture of the user",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User profile updated successfully"
                    },
                    "400": {
                        "description": "Invalid input"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "GuessCreateRequest": {
                "required": [
                    "latitude",
                    "longitude",
                    "error_distance",
                    "user_id",
                    "location_id"
                ],
                "properties": {
                    "latitude": {
                        "description": "Guess latitude with exactly 5 decimal points",
                        "type": "number",
                        "format": "float",
                        "example": 37.77493
                    },
                    "longitude": {
                        "description": "Guess longitude with exactly 5 decimal points",
                        "type": "number",
                        "format": "float",
                        "example": -122.41942
                    },
                    "error_distance": {
                        "description": "Error distance between guess and actual location",
                        "type": "number",
                        "format": "float"
                    },
                    "user_id": {
                        "description": "ID of the user making the guess",
                        "type": "integer"
                    },
                    "location_id": {
                        "description": "ID of the location being guessed",
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "Guess": {
                "required": [
                    "id",
                    "latitude",
                    "longitude",
                    "error_distance",
                    "user_id",
                    "location_id"
                ],
                "properties": {
                    "id": {
                        "description": "Guess ID",
                        "type": "integer"
                    },
                    "latitude": {
                        "description": "Guess latitude",
                        "type": "number",
                        "format": "float",
                        "example": 37.77493
                    },
                    "longitude": {
                        "description": "Guess longitude",
                        "type": "number",
                        "format": "float",
                        "example": -122.41942
                    },
                    "error_distance": {
                        "description": "Error distance",
                        "type": "number",
                        "format": "float"
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer"
                    },
                    "location_id": {
                        "description": "Location ID",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Timestamp when guess was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when guess was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Location": {
                "title": "Location",
                "required": [
                    "id",
                    "latitude",
                    "longitude",
                    "user_id"
                ],
                "properties": {
                    "id": {
                        "description": "Location ID",
                        "type": "integer"
                    },
                    "image": {
                        "description": "Location image",
                        "type": "string",
                        "format": "binary"
                    },
                    "latitude": {
                        "description": "Latitude",
                        "type": "number",
                        "format": "float"
                    },
                    "longitude": {
                        "description": "Longitude",
                        "type": "number",
                        "format": "float"
                    },
                    "user_id": {
                        "description": "User ID associated with the location",
                        "type": "integer"
                    },
                    "created_at": {
                        "description": "Creation timestamp",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Update timestamp",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearer": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Guesses",
            "description": "Guesses"
        },
        {
            "name": "Locations",
            "description": "Locations"
        },
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Profile",
            "description": "Profile"
        }
    ]
}